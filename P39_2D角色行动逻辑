using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Windows;
using System;

public class C001_CharacterMove : MonoBehaviour
{
    //V001_CharacterMove (Make Character Able to move WASD 
    [Header("float(s)")]
    [SerializeField] [Tooltip("❤ Character Movement Speed = 1.0f\n(Recommand Value: 5)")]float speed = 1.0f;//Character Movement Speed
    [SerializeField] [Tooltip("❤ The AD Horizontal Clamp Player can move = 45f/100")]float ClampAD1 = 45f/100;//45%
    void V001_CharacterMove()
        {
        transform.Translate(UnityEngine.Input.GetAxis("Horizontal")*speed*Time.deltaTime,UnityEngine.Input.GetAxis("Vertical")*speed*Time.deltaTime,0);
        transform.position = new Vector3(Mathf.Clamp(transform.position.x,-ActualCameraAD,ActualCameraAD),transform.position.y,transform.position.z);//Mathf.Clamp
        }
    //V002_InitializeCameraSize (Get the Orthographic Camera Size
    float CameraWS;//must = after Game Start
    float CameraAD;//must = after Game Start
    float CameraAspect;//must = after Game Start
    //ADClamp
    float ActualCameraAD;//must = after Game Start
    void V002_InitializeCameraSize()
    { 
      CameraWS=Camera.main.orthographicSize;//5
      CameraAspect=Camera.main.aspect;//Width/Height
      CameraAD=CameraWS*CameraAspect;
     //ADClamp
      ActualCameraAD=CameraAD*ClampAD1;//45%
    }
    //V003_CharacterWSClampLogic (Make Character Loop when go up&down
    //
    void V003_CharacterWSLoopLogic()
    { 
        if(transform.position.y>CameraWS)
        transform.position = new Vector3(transform.position.x,-CameraWS,0);
        else if (transform.position.y<-CameraWS)
        transform.position = new Vector3(transform.position.x,CameraWS,0);
    }
    //V004_Bullet (Instantiate Bullet Logic
    [Header("GameObject")]
    [SerializeField] [Tooltip("❤ Drag \"Bullet\" Prefab Here!!")]GameObject Bullet;//\"'
    void V004_SpawnActor()//Instantiate GameObject
    { 
        if(UnityEngine.Input.GetKeyDown(KeyCode.Space))
        Instantiate(Bullet,transform.position,Quaternion.identity); //Gameobj; position; rotation //Quaternion.identitys
    }
    void Start()
    {
       V002_InitializeCameraSize();
    }  
    void Update()
    {
       V001_CharacterMove();
       V003_CharacterWSLoopLogic();
       V004_SpawnActor();
    }
}
